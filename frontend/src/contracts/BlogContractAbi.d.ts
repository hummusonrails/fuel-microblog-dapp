/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.62.0
  Forc version: 0.44.0
  Fuel-Core version: 0.20.6
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum, Vec } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { value: string };
export type ContractIdOutput = ContractIdInput;
export type PostInput = { id: BigNumberish, content: string, author: IdentityInput };
export type PostOutput = { id: BN, content: string, author: IdentityOutput };

interface BlogContractAbiInterface extends Interface {
  functions: {
    get_num_posts: FunctionFragment;
    get_post: FunctionFragment;
    get_posts_by_author: FunctionFragment;
    initialize_user: FunctionFragment;
    post: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'get_num_posts', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'get_post', values: [BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'get_posts_by_author', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'initialize_user', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'post', values: [string]): Uint8Array;

  decodeFunctionData(functionFragment: 'get_num_posts', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_post', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_posts_by_author', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'initialize_user', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'post', data: BytesLike): DecodedValue;
}

export class BlogContractAbi extends Contract {
  interface: BlogContractAbiInterface;
  functions: {
    get_num_posts: InvokeFunction<[], BN>;
    get_post: InvokeFunction<[post_id: BigNumberish], PostOutput>;
    get_posts_by_author: InvokeFunction<[], Vec<PostOutput>>;
    initialize_user: InvokeFunction<[], IdentityOutput>;
    post: InvokeFunction<[content: string], void>;
  };
}
